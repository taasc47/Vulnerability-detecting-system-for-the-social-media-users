# -*- coding: utf-8 -*-
"""
Created on Tue Nov 16 11:41:48 2021

@author: THISUM PC
"""
import numpy as np
import pandas as pd
import pickle

#---------------- New threshold values from the Decision tree -------------------------#

fea_thresh={'Connections':1996.5,'Experience':12.5,'Attacks':0.5,'Authentication':0.5,
            'Awareness':0.5,'Time':6.5,'Involvement':249.5}


#-------------------- Adding the test Samples------------------------------------------#

data=pd.read_excel('new_book.xlsx',index_col=0, header=0)

test1=data.drop(['Percentage','Label'],axis='columns')
dep_features=test1.copy()

#print(dep_features.values)
print(dep_features.columns)


Model = pickle.load(open("tree_model.pickle","rb"))
pred = Model.predict(test1)
#print(pred)


#-------------------- Checking the dependent features----------------------------------#

def replace_conti(feature,thresh):
    feature_arr=[]
    for i in dep_features[feature].values:
        if i>thresh:
            feature_arr.append('Yes')
        else:
            feature_arr.append('No')
    dep_features[feature]=feature_arr
    return dep_features

def replace_binary(feature,thresh):
    feature_arr=[]
    for i in dep_features[feature].values:
        if i<thresh:
            feature_arr.append('Yes')
        else:
            feature_arr.append('No')
    dep_features[feature]=feature_arr
    return dep_features



replace_conti('Connections', 1996.5)
replace_conti('Experience', 12.5)
replace_conti('Time',6.5)
replace_conti('Involvement',249.5)
replace_binary('Attacks', 0.5)
replace_binary('Authentication', 0.5)
replace_binary('Awareness', 0.5)

dep_features['Percentage']=data['Percentage']
dep_features['Prediction']=pred

print(dep_features)

#----------------------- Saving the Results as an excel sheet--------------------------#

writer=pd.ExcelWriter('Feature_dependency.xlsx')
dep_features.to_excel(writer,'new_sheet',index_label=0)

workbook=writer.book
worksheet=writer.sheets['new_sheet']

format1 = workbook.add_format({'num_format': '0%'})

worksheet.set_column('B:B', 11)
worksheet.set_column('C:C', 10)
worksheet.set_column('D:D', 10)
worksheet.set_column('E:E', 13)
worksheet.set_column('F:F', 13)
worksheet.set_column('G:G', 10)
worksheet.set_column('H:H', 12)
worksheet.set_column('I:I', 12, format1)
writer.save()

